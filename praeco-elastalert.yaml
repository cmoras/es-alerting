apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
      elastalert; cpu request for init container volume-mount-hack'
  creationTimestamp: null
  generateName: praeco-elastalert-85dc966c6d-
  labels:
    app.kubernetes.io/instance: praeco
    app.kubernetes.io/name: elastalert
    pod-template-hash: 85dc966c6d
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: praeco-elastalert-85dc966c6d
    uid: 45c1d4c9-c3a0-44bc-b2bc-fd3590888a2f
  selfLink: /api/v1/namespaces/default/pods/praeco-elastalert-85dc966c6d-5ps54
spec:
  containers:
  - image: daichi703n/elastalert:0.2.1-dev
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: http
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: elastalert
    ports:
    - containerPort: 3030
      name: http
      protocol: TCP
    - containerPort: 3333
      name: ws
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: http
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 100m
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/elastalert/rules
      name: data
      subPath: rules
    - mountPath: /opt/elastalert/rule_templates
      name: data
      subPath: rule_templates
    - mountPath: /opt/elastalert/config.yaml
      name: config
      subPath: config.yaml
    - mountPath: /opt/elastalert/rules/BaseRule.config
      name: baserule-config
      subPath: BaseRule.config
    - mountPath: /opt/elastalert-server/config/config.json
      name: api-config
      subPath: config.json
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-qqdtj
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - command:
    - sh
    - -c
    - chmod -R 777 /opt/elastalert/rules; chmod -R 777 /opt/elastalert/rule_templates
    image: busybox
    imagePullPolicy: Always
    name: volume-mount-hack
    resources:
      requests:
        cpu: 100m
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/elastalert/rules
      name: data
      subPath: rules
    - mountPath: /opt/elastalert/rule_templates
      name: data
      subPath: rule_templates
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-qqdtj
      readOnly: true
  nodeName: gke-cluster-1-default-pool-725e9481-58wg
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: praeco-elastalert
  - configMap:
      defaultMode: 420
      items:
      - key: elastalert_config
        path: config.yaml
      name: praeco-elastalert-config
    name: config
  - configMap:
      defaultMode: 420
      items:
      - key: baserule_config
        path: BaseRule.config
      name: praeco-elastalert-baserule-config
    name: baserule-config
  - configMap:
      defaultMode: 420
      items:
      - key: elastalert_api_config
        path: config.json
      name: praeco-elastalert-api-config
    name: api-config
  - name: default-token-qqdtj
    secret:
      defaultMode: 420
      secretName: default-token-qqdtj
status:
  phase: Pending
  qosClass: Burstable
