apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: praeco
    meta.helm.sh/release-namespace: default
  creationTimestamp: null
  generation: 1
  labels:
    app.kubernetes.io/instance: praeco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elastalert
    app.kubernetes.io/version: 0.2.1-dev
    helm.sh/chart: elastalert-0.1.2
  name: praeco-elastalert
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/praeco-elastalert
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: praeco
      app.kubernetes.io/name: elastalert
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: praeco
        app.kubernetes.io/name: elastalert
    spec:
      containers:
      - image: daichi703n/elastalert:0.2.1-dev
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: elastalert
        ports:
        - containerPort: 3030
          name: http
          protocol: TCP
        - containerPort: 3333
          name: ws
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/elastalert/rules
          name: data
          subPath: rules
        - mountPath: /opt/elastalert/rule_templates
          name: data
          subPath: rule_templates
        - mountPath: /opt/elastalert/config.yaml
          name: config
          subPath: config.yaml
        - mountPath: /opt/elastalert/rules/BaseRule.config
          name: baserule-config
          subPath: BaseRule.config
        - mountPath: /opt/elastalert-server/config/config.json
          name: api-config
          subPath: config.json
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - chmod -R 777 /opt/elastalert/rules; chmod -R 777 /opt/elastalert/rule_templates
        image: busybox
        imagePullPolicy: Always
        name: volume-mount-hack
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/elastalert/rules
          name: data
          subPath: rules
        - mountPath: /opt/elastalert/rule_templates
          name: data
          subPath: rule_templates
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: praeco-elastalert
      - configMap:
          defaultMode: 420
          items:
          - key: elastalert_config
            path: config.yaml
          name: praeco-elastalert-config
        name: config
      - configMap:
          defaultMode: 420
          items:
          - key: baserule_config
            path: BaseRule.config
          name: praeco-elastalert-baserule-config
        name: baserule-config
      - configMap:
          defaultMode: 420
          items:
          - key: elastalert_api_config
            path: config.json
          name: praeco-elastalert-api-config
        name: api-config
status: {}
